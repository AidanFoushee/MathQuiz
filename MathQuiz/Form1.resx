<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        pDoAAAAASUVORK5CYII=
</value>
  </data>
</root>